---
# Kayobe Kolla configuration.

###############################################################################
# Kolla installation.

# Type of Kolla control installation. One of 'binary' or 'source'.
#kolla_ctl_install_type: source

# Path to directory for kolla source code checkout.
#kolla_source_path:

# URL of Kolla source code repository if type is 'source'.
kolla_source_url: https://github.com/RSE-Cambridge/kolla

# Version (branch, tag, etc.) of Kolla source code repository if type is
# 'source'.
#kolla_source_version: refs/tags/cumulus/7.0.1.5
kolla_source_version: sync-upstream-june6

# Path to virtualenv in which to install kolla.
#kolla_venv:

# Path in which to generate kolla configuration.
#kolla_build_config_path:

###############################################################################
# Kolla-ansible installation.

# Type of Kolla-ansible control installation. One of 'binary' or 'source'.
kolla_ansible_ctl_install_type: source

# Path to directory for kolla-ansible source code checkout.
#kolla_ansible_source_path:

# URL of Kolla Ansible source code repository if type is 'source'.
kolla_ansible_source_url: https://github.com/RSE-Cambridge/kolla-ansible

# Version (branch, tag, etc.) of Kolla Ansible source code repository if type
# is 'source'.
#kolla_ansible_source_version: refs/tags/cumulus/7.0.1.7
#kolla_ansible_source_version: upstream-sync-june6
kolla_ansible_source_version:  cumulus/rocky

# Path to virtualenv in which to install kolla-ansible.
#kolla_ansible_venv:

# Extra requirements to install inside the kolla-ansible virtualenv.
#kolla_ansible_venv_extra_requirements:

# Path to Kolla-ansible configuration directory.
#kolla_config_path:

# Path to Kolla-ansible node custom configuration directory.
#kolla_node_custom_config_path:

###############################################################################
# Kolla configuration.

# Kolla base container image distribution.
#kolla_base_distro:

# Kolla installation type: binary or source.
#kolla_install_type:

# URL of docker registry to use for Kolla images.
kolla_docker_registry: "{{ docker_registry }}"

# Docker namespace to use for Kolla images.
kolla_docker_namespace: rse-cambridge

# Username to use to access a docker registry.
#kolla_docker_registry_username:

# Password to use to access a docker registry.
#kolla_docker_registry_password:

# Kolla OpenStack release version. This should be a Docker image tag.
kolla_openstack_release: 7.0.1.10

# Dict mapping names of sources to their definitions for
# kolla_install_type=source. See kolla.common.config for details.
# Example:
# kolla_sources:
#   ironic_base:
#     type: git
#     location: https://github.com/openstack/ironic
#     reference: master
#kolla_sources:

###############################################################################
# Kolla image build configuration.

# Dict mapping Jinja2 block names in kolla's Docker images to their contents.
#kolla_build_blocks:
kolla_build_blocks:
  neutron_server_footer: |
    RUN pip install git+https://github.com/stackhpc/networking-generic-switch@stackhpc/1.2.0.2
  prometheus_server_repository_version: |
    # Avoid the pain of porting 1.x rules and migrating data to 2.x
    ARG prometheus_version='2.8.0'
  ironic_inspector_footer: |
    # Install our custom inspector plugins.
    RUN pip install stackhpc-inspector-plugins==1.1.1
  manila_share_footer: |
    # Update the ceph volume client to mimic, due to obsolete mds commands
    RUN cp /usr/lib/python2.7/site-packages/ceph_volume_client.py /usr/lib/python2.7/site-packages/ceph_volume_client.py.old
    RUN curl https://raw.githubusercontent.com/ceph/ceph/mimic/src/pybind/ceph_volume_client.py -o /usr/lib/python2.7/site-packages/ceph_volume_client.py
  keystone_footer: |
    RUN pip install -U --no-deps git+https://github.com/RSE-Cambridge/keystone@stable/rocky
    RUN yum remove -y mod_auth_openidc
    RUN rpm -i https://github.com/zmartzone/mod_auth_openidc/releases/download/v2.3.11/cjose-0.6.1.4-1.el7.x86_64.rpm
    RUN rpm -i https://github.com/zmartzone/mod_auth_openidc/releases/download/v2.3.11/mod_auth_openidc-2.3.11-1.el7.x86_64.rpm
  horizon_footer: |
    RUN pip install -U --no-deps git+https://github.com/RSE-Cambridge/magnum-ui@cumulus/rocky

# Dict mapping image customization variable names to their values.
# Each variable takes the form:
# <image name>_<customization>_<operation>
# Hyphens in the image name are replaced with underscores. The customization is
# most commonly packages. The operation should be one of override, append or
# remove. The value should be a list.
kolla_build_customizations:
  ironic_inspector_packages_append:
    # Allow custom packages to be installed via pip.
    - 'python-pip'       
  magnum_base_packages_append:
    # Allow custom packages to be installed via pip.
    - 'python-pip'
  keystone_base_packages_append:
    # Allow custom packages to be installed via pip.
    - 'python-pip'
    # Allow manual install of openidc for federation
    - 'jansson-devel'
    - 'openssl-devel'
    - 'hiredis'
  neutron_server_packages_append:
    # Allow custom packages to be installed via pip.
    - 'python-pip'
  horizon_packages_append:
    # Allow custom packages to be installed via pip.
    - 'python-pip'

###############################################################################
# Kolla-ansible inventory configuration.

# Full custom seed inventory contents.
#kolla_seed_inventory_custom:

# Custom overcloud inventory containing a mapping from top level groups to
# hosts.
#kolla_overcloud_inventory_custom_top_level:

# Custom overcloud inventory containing a mapping from components to top level
# groups.
#kolla_overcloud_inventory_custom_components:
kolla_overcloud_inventory_custom_components: "{{ lookup('template', kayobe_config_path ~ '/kolla/inventory/overcloud-components.j2') }}"

# Custom overcloud inventory containing a mapping from services to components.
#kolla_overcloud_inventory_custom_services:

# Full custom overcloud inventory contents. By default this will be the
# concatenation of the top level, component, and service inventories.
#kolla_overcloud_inventory_custom:

# Dict mapping from kolla-ansible groups to kayobe groups and variables. Each
# item is a dict with the following items:
# * groups: A list of kayobe ansible groups to map to this kolla-ansible group.
# * vars: A dict mapping variable names to values for hosts in this
#         kolla-ansible group.
#kolla_overcloud_inventory_top_level_group_map:

# List of names of top level kolla-ansible groups. Any of these groups which
# have no hosts mapped to them will be provided with an empty group definition.
#kolla_overcloud_inventory_kolla_top_level_groups:

###############################################################################
# Kolla-ansible configuration.

# Virtualenv directory where Kolla-ansible's ansible modules will execute
# remotely on the target nodes. If None, no virtualenv will be used.
#kolla_ansible_target_venv:

# Whether TLS is enabled for the external API endpoints.
kolla_enable_tls_external: True

# Whether debug logging is enabled.
#kolla_openstack_logging_debug:

# Upper constraints file for installation of Kolla.
#kolla_upper_constraints_file:

# User account to use for Kolla SSH access.
#kolla_ansible_user:

# Primary group of Kolla SSH user.
#kolla_ansible_group:

# Whether to use privilege escalation for all operations performed via Kolla
# Ansible.
#kolla_ansible_become:

###############################################################################
# Kolla feature flag configuration.

#kolla_enable_aodh:
kolla_enable_barbican: True
kolla_enable_blazar: True
#kolla_enable_cadf_notifications:
kolla_enable_caso: True
#kolla_enable_ceilometer:
kolla_enable_central_logging: True
kolla_enable_ceph: False
#kolla_enable_ceph_mds:
#kolla_enable_ceph_nfs:
#kolla_enable_ceph_rgw:
kolla_enable_cinder: False
#kolla_enable_cinder_backend_hnas_iscsi:
#kolla_enable_cinder_backend_hnas_nfs:
#kolla_enable_cinder_backend_iscsi:
#kolla_enable_cinder_backend_lvm:
#kolla_enable_cinder_backend_nfs:
#kolla_enable_cinder_backend_zfssa_iscsi:
#kolla_enable_cloudkitty:
#kolla_enable_congress:
kolla_enable_designate: True
#kolla_enable_etcd:
#kolla_enable_fluentd:
#kolla_enable_freezer:
#kolla_enable_gnocchi:
kolla_enable_grafana: True
#kolla_enable_haproxy:
kolla_enable_heat: True
kolla_enable_horizon: True
#kolla_enable_influxdb:
#kolla_enable_ironic: False
kolla_enable_ironic_ipxe: True
#kolla_enable_ironic_pxe_uefi:
#kolla_enable_iscsid:
#kolla_enable_karbor:
#kolla_enable_kuryr:
kolla_enable_magnum: True
kolla_enable_manila: False
#kolla_enable_manila_backend_generic:
#kolla_enable_manila_backend_hnas:
kolla_enable_manila_backend_cephfs_native: False
kolla_enable_manila_backend_cephfs_nfs: False
#kolla_enable_mistral:
#kolla_enable_monasca:
#kolla_enable_mongodb:
#kolla_enable_multipathd:
#kolla_enable_murano:
kolla_enable_neutron_agent_ha: True
#kolla_enable_neutron_bgp_dragent:
#kolla_enable_neutron_dvr:
#kolla_enable_neutron_fwaas:
#kolla_enable_neutron_lbaas:
kolla_enable_neutron_provider_networks: True
#kolla_enable_neutron_qos:
#kolla_enable_neutron_segments:
#kolla_enable_neutron_sriov:
#kolla_enable_neutron_vpnaas:
kolla_enable_nova_serialconsole_proxy: True
kolla_enable_octavia: True
#kolla_enable_osprofiler:
#kolla_enable_panko:
kolla_enable_prometheus: True
#kolla_enable_qdrouterd:
#kolla_enable_rally:
#kolla_enable_sahara:
#kolla_enable_searchlight:
#kolla_enable_senlin:
kolla_enable_skydive: True
#kolla_enable_solum:
#kolla_enable_storm:
#kolla_enable_swift:
#kolla_enable_tacker:
#kolla_enable_telegraf:
#kolla_enable_tempest:
#kolla_enable_trove:
#kolla_enable_vitrage:
#kolla_enable_vmtp:
#kolla_enable_watcher:
#kolla_enable_zun:

###############################################################################
# Passwords and credentials.

# Dictionary containing default custom passwords to add or override in the
# Kolla passwords file.
#kolla_ansible_default_custom_passwords:

# Dictionary containing custom passwords to add or override in the Kolla
# passwords file.
#kolla_ansible_custom_passwords:

###############################################################################
# TLS certificate bundle management

# Optionally copy a TLS certificate bundle into place.
#
# When enabled, this will copy the contents of kolla_tls_cert into place for
# use by HAproxy.
#
# Note that this should be formatted as a literal style block scalar.
kolla_tls_cert: "{{ secrets_kolla_tls_cert }}"

# Path to a CA certificate file to use for the OS_CACERT environment variable in
# openrc files when TLS is enabled, instead of Kolla-Ansible's default.
#kolla_external_fqdn_cacert:

###############################################################################
# Dummy variable to allow Ansible to accept this file.
workaround_ansible_issue_8743: yes
